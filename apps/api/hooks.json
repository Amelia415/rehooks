[
  {
    "id": 0,
    "title": "useClipboard",
    "description": "A hook that provides a function to copy text to the clipboard."
  },
  {
    "id": 1,
    "title": "useCountDown",
    "description": "A hook that offers countdown functionality with adjustable start, stop, and interval parameters."
  },
  {
    "id": 2,
    "title": "useCounter",
    "description": "A hook that returns a counter value and a function to increment or decrement the counter."
  },
  {
    "id": 3,
    "title": "useDebounceCallback",
    "description": "A custom hook that debounces a callback function, executing it after the specified delay."
  },
  {
    "id": 4,
    "title": "useDebounceValue",
    "description": "A custom hook that debounces a value, returning the value after the specified delay."
  },
  {
    "id": 5,
    "title": "useEventCallback",
    "description": "A hook that returns a memoized version of a callback that is stable between renders."
  },
  {
    "id": 6,
    "title": "useEventListener",
    "description": "A custom hook to add and clean up an event listener on any target element."
  },
  {
    "id": 7,
    "title": "useFocus",
    "description": "A hook that returns a ref and a boolean indicating whether the element is currently focused."
  },
  {
    "id": 8,
    "title": "useHover",
    "description": "A hook that returns a boolean value indicating whether the user is hovering over an element."
  },
  {
    "id": 9,
    "title": "useKeyPress",
    "description": "Custom hook to detect if a specified key is pressed."
  },
  {
    "id": 10,
    "title": "useLocalStorage",
    "description": "A hook that manages a state variable in sync with local storage, allowing data persistence across browser sessions."
  },
  {
    "id": 11,
    "title": "useOnlineStatus",
    "description": "A hook that returns the current online/offline status of the client."
  },
  {
    "id": 12,
    "title": "useScroll",
    "description": "A hook that returns a boolean value indicating whether the user has scrolled horizontally beyond a specified threshold."
  },
  {
    "id": 13,
    "title": "useSessionStorage",
    "description": "A React hook that allows you to persist data across browser sessions."
  },
  {
    "id": 14,
    "title": "useToggle",
    "description": "A hook that provides a boolean state and a function to toggle it."
  }
]